[{"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\index.js":"1","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\App.js":"2","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\serviceWorker.js":"3","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\songdata.component.js":"4","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\add-songdata.component.js":"5","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\services\\songdata.service.js":"6","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\http-common.js":"7","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\login.component.js":"8"},{"size":432,"mtime":1654025926262,"results":"9","hashOfConfig":"10"},{"size":3560,"mtime":1654026447282,"results":"11","hashOfConfig":"10"},{"size":5069,"mtime":1654008463581,"results":"12","hashOfConfig":"10"},{"size":6681,"mtime":1652668664339,"results":"13","hashOfConfig":"10"},{"size":4546,"mtime":1653088504483,"results":"14","hashOfConfig":"10"},{"size":616,"mtime":1652631157949,"results":"15","hashOfConfig":"10"},{"size":299,"mtime":1654011181909,"results":"16","hashOfConfig":"10"},{"size":5997,"mtime":1654014207426,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1slw9a6",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49"},"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\index.js",[],[],"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\App.js",["50","51","52","53","54","55"],[],"﻿import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/login.component\"\r\nimport mlogo from './style/mtocadas-logo.png';\r\n//https://medium.com/@awhite4096/no-my-collage-generator-for-spotify-cannot-hack-your-spotify-7d44cd68b1d1\r\n\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        var client_id = process.env.REACT_APP_CLIENT_ID\r\n        var redirect_uri = process.env.REACT_APP_REDIRECT_URI\r\n        var client_secret = process.env.REACT_APP_CLIENT_SECRET\r\n        return (\r\n            <div className=\"container-fluid container\">\r\n                <div className=\"app-container\">\r\n                    <div className=\"row text-center\" id=\"title_div\">\r\n                        <div><img src={mlogo} className=\"smol\" />\r\n                            <a className=\"lighter\"> com Spotify&nbsp;\r\n                                <i className=\"fa fa-spotify fa-right\" aria-hidden=\"true\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wrapper nav_container\">\r\n                        <div id=\"msform\">\r\n                            <fieldset>\r\n                                <h2 className=\"fs-title\">Isso não irá expor seus dados ou hackear sua conta&nbsp;\r\n                                    <a className=\"fs-subtitle\"></a>\r\n                                    <a className=\"link\"\r\n                                        href=\"https://developer.spotify.com/documentation/general/guides/authorization/\">\r\n                                        (saiba mais)</a></h2>\r\n                                <Login client_id={client_id} redirect_uri={redirect_uri} />\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <nav className=\"footer\">\r\n                    <p>\r\n                        <a className=\"link\" href=\"https://open.spotify.com/user/aapw?si=-o1yIHjYTHiYZnbuRUi3iA\">Siga-me</a> no Spotify\r\n                        <i className=\"fa fa-spotify\" aria-hidden=\"true\"></i>\r\n                    </p>\r\n                    <p id=\"copyright\">Copyright © Otávio Venâncio 2022</p>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n\r\n/*            <div>\r\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                    <a href=\"/songdatas\" className=\"navbar-brand\">\r\n                        bezKoder\r\n                    </a>\r\n                    <div className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/songdatas\"} className=\"nav-link\">\r\n                                SongData\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/add\"} className=\"nav-link\">\r\n                                Add\r\n                            </Link>\r\n                        </li>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container mt-3\">\r\n                    <Routes>\r\n                        <Route exact path=\"/songdatas\" element={<SongDataList />}></Route>\r\n                        <Route exact path=\"/add\" element={<AddSongData />}></Route>\r\n                        <Route path=\"/songdatas/:id\" element={<SongData />}></Route>\r\n                    </Routes>\r\n                </div>\r\n            </div>*/","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\serviceWorker.js",[],[],[],"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\songdata.component.js",["56"],[],"﻿import React, { Component } from \"react\";\r\nimport SongDDataService from \"../services/songdata.service\";\r\n\r\nexport default class SongData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.getSongData = this.getSongData.bind(this);\r\n        this.updatePublished = this.updatePublished.bind(this);\r\n        this.updateSongData = this.updateSongData.bind(this);\r\n        this.deleteSongData = this.deleteSongData.bind(this);\r\n\r\n        this.state = {\r\n            currentSongData: {\r\n                id: null,\r\n                title: \"\",\r\n                description: \"\",\r\n                published: false\r\n            },\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSongData(this.props.match.params.id);\r\n    }\r\n\r\n    onChangeTitle(e) {\r\n        const title = e.target.value;\r\n\r\n        this.setState(function (prevState) {\r\n            return {\r\n                currentSongData: {\r\n                    ...prevState.currentSongData,\r\n                    title: title\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e) {\r\n        const description = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentSongData: {\r\n                ...prevState.currentSongData,\r\n                description: description\r\n            }\r\n        }));\r\n    }\r\n\r\n    getSongData(id) {\r\n        SongDDataService.get(id)\r\n            .then(response => {\r\n                this.setState({\r\n                    currentSongData: response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    updatePublished(status) {\r\n        var data = {\r\n            id: this.state.currentSongData.id,\r\n            title: this.state.currentSongData.title,\r\n            description: this.state.currentSongData.description,\r\n            published: status\r\n        };\r\n\r\n        SongDDataService.update(this.state.currentSongData.id, data)\r\n            .then(response => {\r\n                this.setState(prevState => ({\r\n                    currentSongData: {\r\n                        ...prevState.currentSongData,\r\n                        published: status\r\n                    }\r\n                }));\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    updateSongData() {\r\n        SongDDataService.update(\r\n            this.state.currentSongData.id,\r\n            this.state.currentSongData\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    message: \"The songdata was updated successfully!\"\r\n                });\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    deleteSongData() {\r\n        SongDDataService.delete(this.state.currentSongData.id)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.props.history.push('/songdatas')\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { currentSongData } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {currentSongData ? (\r\n                    <div className=\"edit-form\">\r\n                        <h4>SongData</h4>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"title\"\r\n                                    value={currentSongData.title}\r\n                                    onChange={this.onChangeTitle}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"description\"\r\n                                    value={currentSongData.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    <strong>Status:</strong>\r\n                                </label>\r\n                                {currentSongData.published ? \"Published\" : \"Pending\"}\r\n                            </div>\r\n                        </form>\r\n\r\n                        {currentSongData.published ? (\r\n                            <button\r\n                                className=\"badge badge-primary mr-2\"\r\n                                onClick={() => this.updatePublished(false)}\r\n                            >\r\n                                UnPublish\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"badge badge-primary mr-2\"\r\n                                onClick={() => this.updatePublished(true)}\r\n                            >\r\n                                Publish\r\n                            </button>\r\n                        )}\r\n\r\n                        <button\r\n                            className=\"badge badge-danger mr-2\"\r\n                            onClick={this.deleteSongData}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"badge badge-success\"\r\n                            onClick={this.updateSongData}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <p>{this.state.message}</p>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <br />\r\n                        <p>Please click on a SongData...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n",[],"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\add-songdata.component.js",["57","58","59","60","61"],[],"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\services\\songdata.service.js",["62"],[],"﻿import http from \"../http-common\";\r\nclass SongDDataService {\r\n    getAll() {\r\n        return http.get(\"/songdatas\");\r\n    }\r\n    get(id) {\r\n        return http.get(`/songdatas/${id}`);\r\n    }\r\n    create(data) {\r\n        return http.post(\"/songdatas\", data);\r\n    }\r\n    update(id, data) {\r\n        return http.put(`/songdatas/${id}`, data);\r\n    }\r\n    delete(id) {\r\n        return http.delete(`/songdatas/${id}`);\r\n    }\r\n    deleteAll() {\r\n        return http.delete(`/songdatas`);\r\n    }\r\n    findByTitle(id) {\r\n        return http.get(`/songdatas?id=${id}`);\r\n    }\r\n}\r\nexport default new SongDDataService();","B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\http-common.js",["63"],[],"﻿import axios from \"axios\";\r\nexport default axios.create({\r\n    baseURL: \"https://maistocadasufmg-bcsth.ondigitalocean.app/backmaistocadasufmg/api\",//\"https://maistocadasufmg.herokuapp.com/api\", //\"http://localhost:8080/api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});",[],"B:\\Otavio\\Documents\\IOT\\FrontMaisTocadasUFMG\\src\\components\\login.component.js",["64","65"],[],"﻿import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SongDDataService from \"../services/songdata.service\";\r\n\r\n\r\nconst optionsArea = [\r\n    {\r\n        label: \"Selecione a área de estudo\",\r\n        value: \"\",\r\n    },\r\n    {\r\n        label: \"Ciências Humanas\",\r\n        value: \"humanas\",\r\n    },\r\n    {\r\n        label: \"Ciências Exatas da Terra\",\r\n        value: \"exatas\",\r\n    },\r\n    {\r\n        label: \"Ciências Biológicas\",\r\n        value: \"biologicas\",\r\n    },\r\n    {\r\n        label: \"Engenharias\",\r\n        value: \"eng\",\r\n    },\r\n    {\r\n        label: \"Ciências da Saúde\",\r\n        value: \"saude\",\r\n    },\r\n    {\r\n        label: \"Ciências Agrárias\",\r\n        value: \"agrarias\",\r\n    },\r\n    {\r\n        label: \"Linguística, Letras e Artes\",\r\n        value: \"letras\",\r\n    },\r\n    {\r\n        label: \"Ciências Sociais Aplicadas\",\r\n        value: \"sociais\",\r\n    },\r\n    {\r\n        label: \"Outras\",\r\n        value: \"outras\",\r\n    }\r\n];\r\n\r\nconst optionsGrau = [\r\n    {\r\n        label: \"Selecione o grau de estudo\",\r\n        value: \"\",\r\n    },\r\n    {\r\n        label: \"Graduação\",\r\n        value: \"graduacao\",\r\n    },\r\n    {\r\n        label: \"Especialização/MBA\",\r\n        value: \"espec\",\r\n    },\r\n    {\r\n        label: \"Mestrado\",\r\n        value: \"mestrado\",\r\n    },\r\n    {\r\n        label: \"Doutorado\",\r\n        value: \"doutorado\",\r\n    },\r\n];\r\n\r\nvar generateRandomString = function (length) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n};\r\n\r\n\r\nfunction Login(props) {\r\n    const CLIENT_ID = props.client_id\r\n    const REDIRECT_URI = props.redirect_uri\r\n    const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\r\n    const RESPONSE_TYPE = \"token\"\r\n    const SCOPE = 'user-top-read';\r\n\r\n    const [token, setToken] = useState(\"\")\r\n    //const [topTracks, setTopTracks] = useState([])\r\n    const [area, setArea] = useState(\"\")\r\n    const [grau, setGrau] = useState(\"\")\r\n    const [erro, setError] = useState([false, \"\"]) //status,message\r\n    const [succ, setSucess] = useState(0)\r\n\r\n    // const getToken = () => {\r\n    //     let urlParams = new URLSearchParams(window.location.hash.replace(\"#\",\"?\"));\r\n    //     let token = urlParams.get('access_token');\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const hash = window.location.hash\r\n        let token = window.localStorage.getItem(\"token\")\r\n        // getToken()\r\n        if (!token && hash) {\r\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\r\n            window.location.hash = \"\"\r\n            window.localStorage.setItem(\"token\", token)\r\n        }\r\n\r\n        setToken(token)\r\n    }, [])\r\n\r\n    const onChangeArea = async (e) => {\r\n        setError(false, \"\")\r\n        setSucess(0)\r\n        setArea(e.target.value)\r\n    }\r\n\r\n    const onChangeGrau = async (e) => {\r\n        setError(false, \"\")\r\n        setSucess(0)\r\n        setGrau(e.target.value)\r\n    }\r\n\r\n    const logout = () => {\r\n        setToken(\"\")\r\n        window.localStorage.removeItem(\"token\")\r\n    }\r\n    const saveSongData = async (e) => {\r\n        setError(false, \"\")\r\n        setSucess(0)\r\n        e.preventDefault()\r\n        if (grau === \"\" || area === \"\") {\r\n            setError([true])\r\n            return\r\n        }\r\n        try {\r\n            const { data } = await axios.get(\"https://api.spotify.com/v1/me/top/tracks\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            //setTopTracks(data)\r\n            var req = data\r\n            req.grau = grau\r\n            req.area = area\r\n            const { resp } = await SongDDataService.create(req)\r\n            setSucess(1)\r\n        } catch (err) {\r\n            setSucess(-1)\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {succ <= 0 ?\r\n                <div>\r\n                    {erro[0] ?\r\n                        <div className=\"warning\">Preencha todos os campos!</div> : null}\r\n                    {succ < 0 ?\r\n                        <div className=\"error\">Erro Fatal!</div> : null}\r\n                    {token ?\r\n                        <div>\r\n                            <select id=\"spotifyCols\" autoComplete=\"off\" onChange={onChangeGrau}>\r\n                                {optionsGrau.map((option) => (\r\n                                    <option key={option.value} value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </select>\r\n                            <select id=\"spotifyPeriod\" autoComplete=\"off\" onChange={onChangeArea}>\r\n                                {optionsArea.map((option) => (\r\n                                    <option key={option.value} value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </select>\r\n                            <button onClick={saveSongData} className=\"next action-button\">Finalizar\r\n                            </button>\r\n                            <button onClick={logout} style={{ visibility: token ? 'visible' : 'hidden' }} className=\"next action-button\">Cancelar</button>\r\n                        </div>\r\n                        : <h2>Please login</h2>\r\n                    }\r\n                    {!token ?\r\n                        <a className=\"next action-button abutton\" href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${SCOPE}&state=${generateRandomString(16)}`}>\r\n                            Autenticar <i className=\"fa fa-spotify fa-right aria-hidden=true\"></i></a>\r\n                        : null}\r\n\r\n                </div> : <div className=\"success\"><h1>Sucesso!</h1></div>}\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Login;",{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"70"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":13,"nodeType":"73","messageId":"74","endLine":14,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":19,"column":30,"nodeType":"77","endLine":19,"endColumn":66},{"ruleId":"78","severity":1,"message":"79","line":20,"column":29,"nodeType":"77","endLine":20,"endColumn":52},{"ruleId":"80","severity":1,"message":"81","line":29,"column":37,"nodeType":"77","endLine":29,"endColumn":64},{"ruleId":"78","severity":1,"message":"79","line":29,"column":37,"nodeType":"77","endLine":29,"endColumn":64},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"82"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"83"},{"ruleId":"71","severity":1,"message":"84","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"85","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":22},{"ruleId":"71","severity":1,"message":"86","line":67,"column":7,"nodeType":"73","messageId":"74","endLine":67,"endColumn":20},{"ruleId":"71","severity":1,"message":"87","line":68,"column":7,"nodeType":"73","messageId":"74","endLine":68,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"88"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"89"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"90"},{"ruleId":"71","severity":1,"message":"91","line":149,"column":21,"nodeType":"73","messageId":"74","endLine":149,"endColumn":25},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"92","text":"93"},"no-unused-vars","'client_secret' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",{"range":"94","text":"93"},{"range":"95","text":"93"},"'useState' is defined but never used.","'SpotifyService' is defined but never used.","'CLIENT_SECRET' is assigned a value but never used.","'SCOPE' is assigned a value but never used.",{"range":"96","text":"93"},{"range":"97","text":"93"},{"range":"98","text":"93"},"'resp' is assigned a value but never used.",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]