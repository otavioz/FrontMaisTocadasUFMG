{"ast":null,"code":"var _jsxFileName = \"B:\\\\Otavio\\\\Documents\\\\IOT\\\\FrontMaisTocadasUFMG\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createRoot } from 'react-dom/client';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this));\napp.get('/callback', function (req, res) {\n  // your application requests refresh and access tokens\n  // after checking the state parameter\n  var code = req.query.code || null;\n  var state = req.query.state || null;\n  var storedState = req.cookies ? req.cookies[stateKey] : null;\n\n  if (state === null || state !== storedState) {\n    res.redirect('/#' + querystring.stringify({\n      error: 'state_mismatch'\n    }));\n  } else {\n    res.clearCookie(stateKey);\n    var authOptions = {\n      url: 'https://accounts.spotify.com/api/token',\n      form: {\n        code: code,\n        redirect_uri: process.env.REDIRECT_URI,\n        grant_type: 'authorization_code'\n      },\n      headers: {\n        'Authorization': 'Basic ' + new Buffer(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET).toString('base64')\n      },\n      json: true\n    };\n    request.post(authOptions, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        var access_token = body.access_token,\n            refresh_token = body.refresh_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/me/top/tracks',\n          headers: {\n            'Authorization': 'Bearer ' + access_token\n          },\n          json: true\n        }; // use the access token to access the Spotify Web API\n\n        request.get(options, function (error, response, body) {\n          for (i in body[\"items\"]) {\n            console.log(body[\"items\"][i]['name'] + \" e \" + body[\"items\"][i]['popularity']);\n          }\n        }); // we can also pass the token to the browser to make requests from there\n\n        res.redirect('/#' + querystring.stringify({\n          access_token: access_token,\n          refresh_token: refresh_token\n        }));\n      } else {\n        res.redirect('/#' + querystring.stringify({\n          error: 'invalid_token'\n        }));\n      }\n    });\n  }\n});\nserviceWorker.unregister();","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","createRoot","App","serviceWorker","container","document","getElementById","root","render","app","get","req","res","code","query","state","storedState","cookies","stateKey","redirect","querystring","stringify","error","clearCookie","authOptions","url","form","redirect_uri","process","env","REDIRECT_URI","grant_type","headers","Buffer","CLIENT_ID","CLIENT_SECRET","toString","json","request","post","response","body","statusCode","access_token","refresh_token","options","i","console","log","unregister"],"sources":["B:/Otavio/Documents/IOT/FrontMaisTocadasUFMG/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\napp.get('/callback', function (req, res) {\r\n\r\n    // your application requests refresh and access tokens\r\n    // after checking the state parameter\r\n\r\n    var code = req.query.code || null;\r\n    var state = req.query.state || null;\r\n    var storedState = req.cookies ? req.cookies[stateKey] : null;\r\n\r\n    if (state === null || state !== storedState) {\r\n        res.redirect('/#' +\r\n            querystring.stringify({\r\n                error: 'state_mismatch'\r\n            }));\r\n    } else {\r\n        res.clearCookie(stateKey);\r\n        var authOptions = {\r\n            url: 'https://accounts.spotify.com/api/token',\r\n            form: {\r\n                code: code,\r\n                redirect_uri: process.env.REDIRECT_URI,\r\n                grant_type: 'authorization_code'\r\n            },\r\n            headers: {\r\n                'Authorization': 'Basic ' + (new Buffer(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET).toString('base64'))\r\n            },\r\n            json: true\r\n        };\r\n\r\n        request.post(authOptions, function (error, response, body) {\r\n            if (!error && response.statusCode === 200) {\r\n\r\n                var access_token = body.access_token,\r\n                    refresh_token = body.refresh_token;\r\n\r\n                var options = {\r\n                    url: 'https://api.spotify.com/v1/me/top/tracks',\r\n                    headers: { 'Authorization': 'Bearer ' + access_token },\r\n                    json: true\r\n                };\r\n\r\n                // use the access token to access the Spotify Web API\r\n                request.get(options, function (error, response, body) {\r\n                    for (i in body[\"items\"]) {\r\n                        console.log(body[\"items\"][i]['name'] + \" e \" + body[\"items\"][i]['popularity']);\r\n                    }\r\n                });\r\n\r\n                // we can also pass the token to the browser to make requests from there\r\n                res.redirect('/#' +\r\n                    querystring.stringify({\r\n                        access_token: access_token,\r\n                        refresh_token: refresh_token\r\n                    }));\r\n            } else {\r\n                res.redirect('/#' +\r\n                    querystring.stringify({\r\n                        error: 'invalid_token'\r\n                    }));\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nserviceWorker.unregister();"],"mappings":"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"},"metadata":{},"sourceType":"module"}